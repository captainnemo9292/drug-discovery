{"version":3,"sources":["DataTableTitle.tsx"],"names":["React","Animated","StyleSheet","TouchableWithoutFeedback","View","I18nManager","color","MaterialCommunityIcon","Text","withTheme","DataTableTitle","state","spinAnim","Value","props","sortDirection","prevProps","timing","toValue","duration","useNativeDriver","start","numeric","children","onPress","theme","style","numberOfLines","rest","textColor","colors","text","alpha","rgb","string","spin","interpolate","inputRange","outputRange","icon","styles","transform","rotate","isRTL","container","right","cell","sorted","Component","displayName","defaultProps","create","flex","flexDirection","alignContent","paddingVertical","justifyContent","height","lineHeight","fontSize","fontWeight","alignItems","marginLeft"],"mappings":"kkBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OACEC,QADF,CAGEC,UAHF,CAIEC,wBAJF,CAKEC,IALF,CAOEC,WAPF,KAQO,cARP,CASA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,0BAAlC,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,OAASC,SAAT,KAA0B,oBAA1B,C,GAmCMC,CAAAA,c,8ZAOJC,K,CAAQ,CACNC,QAAQ,CAAE,GAAIX,CAAAA,QAAQ,CAACY,KAAb,CACR,MAAKC,KAAL,CAAWC,aAAX,GAA6B,WAA7B,CAA2C,CAA3C,CAA+C,CADvC,CADJ,C,wGAMWC,S,CAAkB,CACnC,GAAIA,SAAS,CAACD,aAAV,GAA4B,KAAKD,KAAL,CAAWC,aAA3C,CAA0D,CACxD,OACD,CAEDd,QAAQ,CAACgB,MAAT,CAAgB,KAAKN,KAAL,CAAWC,QAA3B,CAAqC,CACnCM,OAAO,CAAE,KAAKJ,KAAL,CAAWC,aAAX,GAA6B,WAA7B,CAA2C,CAA3C,CAA+C,CADrB,CAEnCI,QAAQ,CAAE,GAFyB,CAGnCC,eAAe,CAAE,IAHkB,CAArC,EAIGC,KAJH,GAKD,C,uCAEQ,iBAUH,KAAKP,KAVF,CAELQ,OAFK,aAELA,OAFK,CAGLC,QAHK,aAGLA,QAHK,CAILC,OAJK,aAILA,OAJK,CAKLT,aALK,aAKLA,aALK,CAMLU,KANK,aAMLA,KANK,CAOLC,KAPK,aAOLA,KAPK,CAQLC,aARK,aAQLA,aARK,CASFC,IATE,wHAYP,GAAMC,CAAAA,SAAS,CAAGvB,KAAK,CAACmB,KAAK,CAACK,MAAN,CAAaC,IAAd,CAAL,CACfC,KADe,CACT,GADS,EAEfC,GAFe,GAGfC,MAHe,EAAlB,CAKA,GAAMC,CAAAA,IAAI,CAAG,KAAKxB,KAAL,CAAWC,QAAX,CAAoBwB,WAApB,CAAgC,CAC3CC,UAAU,CAAE,CAAC,CAAD,CAAI,CAAJ,CAD+B,CAE3CC,WAAW,CAAE,CAAC,MAAD,CAAS,QAAT,CAF8B,CAAhC,CAAb,CAKA,GAAMC,CAAAA,IAAI,CAAGxB,aAAa,CACxB,oBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAE,CAACyB,MAAM,CAACD,IAAR,CAAc,CAAEE,SAAS,CAAE,CAAC,CAAEC,MAAM,CAAEP,IAAV,CAAD,CAAb,CAAd,CAAtB,iDACE,oBAAC,qBAAD,EACE,IAAI,CAAC,YADP,CAEE,IAAI,CAAE,EAFR,CAGE,KAAK,CAAEV,KAAK,CAACK,MAAN,CAAaC,IAHtB,CAIE,SAAS,CAAE1B,WAAW,CAACsC,KAAZ,CAAoB,KAApB,CAA4B,KAJzC,iDADF,CADwB,CAStB,IATJ,CAWA,MACE,qBAAC,wBAAD,WAA0B,QAAQ,CAAE,CAACnB,OAArC,CAA8C,OAAO,CAAEA,OAAvD,EAAoEI,IAApE,oDACE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAACY,MAAM,CAACI,SAAR,CAAmBtB,OAAO,EAAIkB,MAAM,CAACK,KAArC,CAA4CnB,KAA5C,CAAb,kDACGa,IADH,CAGE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLC,MAAM,CAACM,IADF,CAEL/B,aAAa,CAAGyB,MAAM,CAACO,MAAV,CAAmB,CAAEzC,KAAK,CAAEuB,SAAT,CAF3B,CADT,CAKE,aAAa,CAAEF,aALjB,kDAOGJ,QAPH,CAHF,CADF,CADF,CAiBD,C,4BA3E0BvB,KAAK,CAACgD,S,EAA7BtC,c,CACGuC,W,CAAc,iB,CADjBvC,c,CAGGwC,Y,CAAe,CACpBvB,aAAa,CAAE,CADK,C,CA2ExB,GAAMa,CAAAA,MAAM,CAAGtC,UAAU,CAACiD,MAAX,CAAkB,CAC/BP,SAAS,CAAE,CACTQ,IAAI,CAAE,CADG,CAETC,aAAa,CAAE,KAFN,CAGTC,YAAY,CAAE,QAHL,CAITC,eAAe,CAAE,EAJR,CADoB,CAQ/BV,KAAK,CAAE,CACLW,cAAc,CAAE,UADX,CARwB,CAY/BV,IAAI,CAAE,CACJW,MAAM,CAAE,EADJ,CAEJC,UAAU,CAAE,EAFR,CAGJC,QAAQ,CAAE,EAHN,CAIJC,UAAU,CAAE,KAJR,CAKJC,UAAU,CAAE,QALR,CAZyB,CAoB/Bd,MAAM,CAAE,CACNe,UAAU,CAAE,CADN,CApBuB,CAwB/BvB,IAAI,CAAE,CACJkB,MAAM,CAAE,EADJ,CAEJD,cAAc,CAAE,QAFZ,CAxByB,CAAlB,CAAf,CA8BA,cAAe/C,CAAAA,SAAS,CAACC,cAAD,CAAxB,CAGA,OAASA,cAAT","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  spinAnim: Animated.Value;\n};\n\nclass DataTableTitle extends React.Component<Props, State> {\n  static displayName = 'DataTable.Title';\n\n  static defaultProps = {\n    numberOfLines: 1,\n  };\n\n  state = {\n    spinAnim: new Animated.Value(\n      this.props.sortDirection === 'ascending' ? 0 : 1\n    ),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.sortDirection === this.props.sortDirection) {\n      return;\n    }\n\n    Animated.timing(this.state.spinAnim, {\n      toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const {\n      numeric,\n      children,\n      onPress,\n      sortDirection,\n      theme,\n      style,\n      numberOfLines,\n      ...rest\n    } = this.props;\n\n    const textColor = color(theme.colors.text)\n      .alpha(0.6)\n      .rgb()\n      .string();\n\n    const spin = this.state.spinAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '180deg'],\n    });\n\n    const icon = sortDirection ? (\n      <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n        <MaterialCommunityIcon\n          name=\"arrow-down\"\n          size={16}\n          color={theme.colors.text}\n          direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n        />\n      </Animated.View>\n    ) : null;\n\n    return (\n      <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n        <View style={[styles.container, numeric && styles.right, style]}>\n          {icon}\n\n          <Text\n            style={[\n              styles.cell,\n              sortDirection ? styles.sorted : { color: textColor },\n            ]}\n            numberOfLines={numberOfLines}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]}